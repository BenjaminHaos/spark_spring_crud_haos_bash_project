# echo $scripted_framework_output_root_directory

function display_file_creation_location_vars(){
    printf "PACKAGE : %s\n" $java_class_model_files_directory
    printf "CREATING FILE ONE : %s\n" $java_class_model_files_directory_and_name_one
    printf "CREATING FILE TWO : %s\n" $java_class_model_files_directory_and_name_two
    
}

function add_header_to_java_model_file_one(){

cat  << EOT > $java_class_model_files_directory_and_name_one
package Model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class Model {
    private Map<String, Object> $java_class_name_lower_case;

    /**
     * Constructor
     */
    public Model() {
        this.$java_class_name_lower_case = new HashMap<>();
    }
EOT
# Do not indent this line above here!
}

function add_create_function_to_model_file_one(){
    param_string="("        
    table_type="$java_class_name"Table
    table_name="usr"

    for ((attribute_array_index=0;attribute_array_index<${#java_class_attribute_array[@]};attribute_array_index++)); do
        create_attribute_array_split
        param_string="$param_string$atribute_type $atribute_name"
        if (("$attribute_array_index" < "$((${#java_class_attribute_array[@]}-1))")); then
            param_string="$param_string, "
        else
            param_string="$param_string)"
        fi
    done


cat  << EOT >> $java_class_model_files_directory_and_name_one
    
    public int create$java_class_name$param_string{
EOT
    
        cat  << EOT >> $java_class_model_files_directory_and_name_one

        $table_type $table_name = new $table_type();

EOT
    
    for ((attribute_array_index=0;attribute_array_index<${#java_class_attribute_array[@]};attribute_array_index++)); do
        create_attribute_array_split
        cat  << EOT >> $java_class_model_files_directory_and_name_one
        $table_name.set$atribute_name_upper_case($atribute_name);
EOT
    done

        cat  << EOT >> $java_class_model_files_directory_and_name_one
        $java_class_name_lower_case.put(id, $java_class_name_lower_case);
EOT

cat  << EOT >> $java_class_model_files_directory_and_name_one
    
        return 1;
    }
EOT
: << 'EOG'
EOG
}

function add_update_function_to_model_file_one(){
    table_type="$java_class_name"Table
    table_name="usr"

    param_string="("        

    for ((attribute_array_index=0;attribute_array_index<${#java_class_attribute_array[@]};attribute_array_index++)); do
        create_attribute_array_split
        param_string="$param_string$atribute_type $atribute_name"
        if (("$attribute_array_index" < "$((${#java_class_attribute_array[@]}-1))")); then
            param_string="$param_string, "
        else
            param_string="$param_string)"
        fi
    done


cat  << EOT >> $java_class_model_files_directory_and_name_one
    
    public int update$java_class_name$param_string{
EOT
        attribute_array_index=0
        create_attribute_array_split
        
        cat  << EOT >> $java_class_model_files_directory_and_name_one

        $table_type $table_name = ($table_type)$java_class_name_lower_case.get($atribute_name);

EOT
    
    for ((attribute_array_index=1;attribute_array_index<${#java_class_attribute_array[@]};attribute_array_index++)); do
        create_attribute_array_split
        cat  << EOT >> $java_class_model_files_directory_and_name_one
        $table_name.set$atribute_name_upper_case($atribute_name);
EOT
    done

        cat  << EOT >> $java_class_model_files_directory_and_name_one
        $java_class_name_lower_case.put(id, $java_class_name_lower_case);
EOT

cat  << EOT >> $java_class_model_files_directory_and_name_one
    
        return 1;
    }

EOT
: << 'EOG'
EOG
}

function add_list_return_function_to_model_file_one(){
cat  << EOT >> $java_class_model_files_directory_and_name_one
    public List sendElements() {
        List<Object> ret = new ArrayList<>($java_class_name_lower_case.values());
        return ret;
    }

    public List send$java_class_namesId() {
        List<Object> ret = new ArrayList<>($java_class_name_lower_case.keySet());
        return ret;
    }

EOT
# Do not indent this line above here!
}

function add_footer_to_model_file_one(){
cat  << EOT >> $java_class_model_files_directory_and_name_one
} // Class generated by : $java_class_generator_name
EOT
# Do not indent this line above here!
}

function create_java_model_files(){
    display_file_creation_location_vars
    add_header_to_java_model_file_one
    add_create_function_to_model_file_one
    add_update_function_to_model_file_one
    add_list_return_function_to_model_file_one
    add_footer_to_model_file_one
}


: << 'EOF'

function add_attribute_decleration_to_java_file(){
cat  << EOT >> $java_class_model_files_directory_and_name_one
    $atribute_protection_var $atribute_type $atribute_name;
EOT
# Do not indent this line above here!
}
EOF

