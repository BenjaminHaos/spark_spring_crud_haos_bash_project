# echo $scripted_framework_output_root_directory

function display_java_class_file_creation_vars(){
    display_file_creation_location_variables
    
    display_java_class_config_variables
    #display_java_class_atributes_descriptor_vars
}

function display_java_class_config_variables(){
    
    printf "Class Name : %s\n" $name_for_java_class
    
    for ((java_class_array_variable_index=0;java_class_array_variable_index<${#java_class_attribute_array[@]};java_class_array_variable_index++)); do
        echo ${java_class_attribute_array[java_class_array_variable_index]}
    done
    
    printf "Class Creator : %s\n" "$java_class_creator"
}

function display_java_class_atributes_descriptor_vars(){
    
    printf "%s\n" ${#java_class_atributes_2d_descriptor_array[@]}
    
    local count;

    for var in ${java_class_atributes_2d_descriptor_array[@]}
    do
        printf "%s\n" $var
    done
: << 'EOT'
EOT
}

function display_file_creation_location_variables(){
    printf "CREATED PACKAGE LOCATION : %s\n" $scripted_framework_output_root_directory
    printf "   CREATED FILE LOCATION : %s\n" $java_files_output_directory_and_file_name
}

function add_header_to_java_file(){

mkdir -p $java_files_output_directory_name

cat  << EOT > $java_files_output_directory_and_file_name
package $java_package_for_class;
    
public class $java_class_name implements Validable{    
    
EOT
# Do not indent this line above here!
}

function add_attribute_decleration_to_java_file(){
    for ((attribute_array_index=0;attribute_array_index<${#java_class_attribute_array[@]};attribute_array_index++)); do
        create_attribute_array_split
        cat  << EOT >> $java_files_output_directory_and_file_name
    $atribute_protection_var $atribute_type $atribute_name;
EOT
    done
# Do not indent this line above here!
}

function add_getters_and_setters_to_java_file(){
    for ((attribute_array_index=0;attribute_array_index<${#java_class_attribute_array[@]};attribute_array_index++)); do
        create_attribute_array_split
        add_attribute_getter_to_java_file
        add_attribute_setter_to_java_file
    done        
}

function add_attribute_getter_to_java_file(){
cat  << EOT >> $java_files_output_directory_and_file_name
    
    public $atribute_type get$atribute_name_upper_case() {
        return $atribute_name;
    }
EOT
# Do not indent this line above here!
}

function add_attribute_setter_to_java_file(){
cat  << EOT >> $java_files_output_directory_and_file_name
    
    public void set$atribute_name_upper_case($atribute_type $atribute_name) {
        this.$atribute_name = $atribute_name;
    }
EOT
# Do not indent this line above here!
}

function add_attribute_getter_to_java_file(){
cat  << EOT >> $java_files_output_directory_and_file_name
    
    public $atribute_type get$atribute_name_upper_case() {
        return $atribute_name;
    }
EOT
# Do not indent this line above here!
}

function add_attribute_setter_to_java_file(){

cat  << EOT >> $java_files_output_directory_and_file_name
    
    public void set$atribute_name_upper_case($atribute_type $atribute_name) {
        this.$atribute_name = $atribute_name;
    }
EOT
# Do not indent this line above here!

    
    
}

function add_footer_with_implemented_java_file(){


cat  << EOT >> $java_files_output_directory_and_file_name
    
    @Override
    public boolean isValid() {
        
        // TODO : CODE THIS!
        return true;
    }
    
} // Class generated by : $java_class_generator_name
EOT
# Do not indent this line above here!
}

function add_body_to_java_file(){
    add_attribute_decleration_to_java_file
    add_getters_and_setters_to_java_file
}

function set_vars_used_to_generate_java_file(){
    #package_for_java_class;
    name_for_java_class=$java_class_name;
    
: << 'EOT'
    for ((attribute_array_index=0;attribute_array_index<${#java_class_attribute_array[@]};attribute_array_index++)); do
        create_attribute_array_split
        #add_attribute_getter_to_java_file
        #add_attribute_setter_to_java_file
    done        
    
    
    local atribute_array_1
    class_atributes_array_1=()
    
    class_atributes_array_1[0]=private
    class_atributes_array_1[1]=protected
    class_atributes_array_1[2]=public

    local atribute_array_2
    class_atributes_array_2=()
    
    class_atributes_array_2[0]=string
    class_atributes_array_2[1]=int
    class_atributes_array_2[2]=long
    
    #local test_array_1
    java_class_atributes_2d_descriptor_array=()
    java_class_atributes_2d_descriptor_array[0]=${class_atributes_array_1[@]}
    java_class_atributes_2d_descriptor_array[1]=${class_atributes_array_2[@]}
    
    printf "%s\n" ${#test_array_1[@]}
EOT

}

function create_java_file(){
    local package_for_java_class;
    local name_for_java_class;
    
    set_vars_used_to_generate_java_file
    display_java_class_file_creation_vars
    : << 'EOP'
    add_header_to_java_file
    add_body_to_java_file
    add_footer_java_file
EOP
}

function test_bp(){
    create_java_file
}
#add_header_to_java_file